/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CommentWhereUniqueInput } from "../../comment/base/CommentWhereUniqueInput";

import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
  IsInt,
  Min,
  Max,
  IsEnum,
} from "class-validator";

import { Type } from "class-transformer";
import { EventWhereUniqueInput } from "../../event/base/EventWhereUniqueInput";
import { MessageWhereUniqueInput } from "../../message/base/MessageWhereUniqueInput";
import { EnumMediaMetaType } from "./EnumMediaMetaType";
import { PostWhereUniqueInput } from "../../post/base/PostWhereUniqueInput";
import { EnumMediaTypeField } from "./EnumMediaTypeField";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { VoteEventWhereUniqueInput } from "../../voteEvent/base/VoteEventWhereUniqueInput";
import { VoteEventCandidateWhereUniqueInput } from "../../voteEventCandidate/base/VoteEventCandidateWhereUniqueInput";

@InputType()
class MediaUpdateInput {
  @ApiProperty({
    required: false,
    type: () => CommentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CommentWhereUniqueInput)
  @IsOptional()
  @Field(() => CommentWhereUniqueInput, {
    nullable: true,
  })
  comment?: CommentWhereUniqueInput | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateCreated?: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  duration?: string | null;

  @ApiProperty({
    required: false,
    type: () => EventWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EventWhereUniqueInput)
  @IsOptional()
  @Field(() => EventWhereUniqueInput, {
    nullable: true,
  })
  event?: EventWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  height?: number | null;

  @ApiProperty({
    required: false,
    type: () => MessageWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MessageWhereUniqueInput)
  @IsOptional()
  @Field(() => MessageWhereUniqueInput, {
    nullable: true,
  })
  message?: MessageWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  meta?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumMediaMetaType,
  })
  @IsEnum(EnumMediaMetaType)
  @IsOptional()
  @Field(() => EnumMediaMetaType, {
    nullable: true,
  })
  metaType?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => PostWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PostWhereUniqueInput)
  @IsOptional()
  @Field(() => PostWhereUniqueInput, {
    nullable: true,
  })
  post?: PostWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  thumbnail?: string | null;

  @ApiProperty({
    required: false,
    enum: EnumMediaTypeField,
  })
  @IsEnum(EnumMediaTypeField)
  @IsOptional()
  @Field(() => EnumMediaTypeField, {
    nullable: true,
  })
  typeField?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  url?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => VoteEventWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => VoteEventWhereUniqueInput)
  @IsOptional()
  @Field(() => VoteEventWhereUniqueInput, {
    nullable: true,
  })
  voteEvent?: VoteEventWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => VoteEventCandidateWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => VoteEventCandidateWhereUniqueInput)
  @IsOptional()
  @Field(() => VoteEventCandidateWhereUniqueInput, {
    nullable: true,
  })
  voteEventCandidate?: VoteEventCandidateWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => VoteEventCandidateWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => VoteEventCandidateWhereUniqueInput)
  @IsOptional()
  @Field(() => VoteEventCandidateWhereUniqueInput, {
    nullable: true,
  })
  voteEventCandidateMedia?: VoteEventCandidateWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  width?: number | null;
}

export { MediaUpdateInput as MediaUpdateInput };
