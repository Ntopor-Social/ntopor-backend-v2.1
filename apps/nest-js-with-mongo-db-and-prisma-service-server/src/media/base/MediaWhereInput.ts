/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { CommentWhereUniqueInput } from "../../comment/base/CommentWhereUniqueInput";
import { ValidateNested, IsOptional, IsEnum } from "class-validator";
import { Type } from "class-transformer";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { EventWhereUniqueInput } from "../../event/base/EventWhereUniqueInput";
import { IntNullableFilter } from "../../util/IntNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { MessageWhereUniqueInput } from "../../message/base/MessageWhereUniqueInput";
import { EnumMediaMetaType } from "./EnumMediaMetaType";
import { PostWhereUniqueInput } from "../../post/base/PostWhereUniqueInput";
import { EnumMediaTypeField } from "./EnumMediaTypeField";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { VoteEventWhereUniqueInput } from "../../voteEvent/base/VoteEventWhereUniqueInput";
import { VoteEventCandidateWhereUniqueInput } from "../../voteEventCandidate/base/VoteEventCandidateWhereUniqueInput";

@InputType()
class MediaWhereInput {
  @ApiProperty({
    required: false,
    type: () => CommentWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => CommentWhereUniqueInput)
  @IsOptional()
  @Field(() => CommentWhereUniqueInput, {
    nullable: true,
  })
  comment?: CommentWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  dateCreated?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  duration?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => EventWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EventWhereUniqueInput)
  @IsOptional()
  @Field(() => EventWhereUniqueInput, {
    nullable: true,
  })
  event?: EventWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  height?: IntNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => MessageWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MessageWhereUniqueInput)
  @IsOptional()
  @Field(() => MessageWhereUniqueInput, {
    nullable: true,
  })
  message?: MessageWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  meta?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumMediaMetaType,
  })
  @IsEnum(EnumMediaMetaType)
  @IsOptional()
  @Field(() => EnumMediaMetaType, {
    nullable: true,
  })
  metaType?: "Option1";

  @ApiProperty({
    required: false,
    type: () => PostWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PostWhereUniqueInput)
  @IsOptional()
  @Field(() => PostWhereUniqueInput, {
    nullable: true,
  })
  post?: PostWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  thumbnail?: StringNullableFilter;

  @ApiProperty({
    required: false,
    enum: EnumMediaTypeField,
  })
  @IsEnum(EnumMediaTypeField)
  @IsOptional()
  @Field(() => EnumMediaTypeField, {
    nullable: true,
  })
  typeField?: "Option1";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  url?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  user?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => VoteEventWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => VoteEventWhereUniqueInput)
  @IsOptional()
  @Field(() => VoteEventWhereUniqueInput, {
    nullable: true,
  })
  voteEvent?: VoteEventWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => VoteEventCandidateWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => VoteEventCandidateWhereUniqueInput)
  @IsOptional()
  @Field(() => VoteEventCandidateWhereUniqueInput, {
    nullable: true,
  })
  voteEventCandidate?: VoteEventCandidateWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => VoteEventCandidateWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => VoteEventCandidateWhereUniqueInput)
  @IsOptional()
  @Field(() => VoteEventCandidateWhereUniqueInput, {
    nullable: true,
  })
  voteEventCandidateMedia?: VoteEventCandidateWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: IntNullableFilter,
  })
  @Type(() => IntNullableFilter)
  @IsOptional()
  @Field(() => IntNullableFilter, {
    nullable: true,
  })
  width?: IntNullableFilter;
}

export { MediaWhereInput as MediaWhereInput };
