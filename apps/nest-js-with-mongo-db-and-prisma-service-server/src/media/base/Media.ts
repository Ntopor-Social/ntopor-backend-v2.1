/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Comment } from "../../comment/base/Comment";

import {
  ValidateNested,
  IsOptional,
  IsDate,
  IsString,
  MaxLength,
  IsInt,
  Min,
  Max,
  IsEnum,
} from "class-validator";

import { Type } from "class-transformer";
import { Event } from "../../event/base/Event";
import { Message } from "../../message/base/Message";
import { EnumMediaMetaType } from "./EnumMediaMetaType";
import { Post } from "../../post/base/Post";
import { EnumMediaTypeField } from "./EnumMediaTypeField";
import { User } from "../../user/base/User";
import { VoteEvent } from "../../voteEvent/base/VoteEvent";
import { VoteEventCandidate } from "../../voteEventCandidate/base/VoteEventCandidate";

@ObjectType()
class Media {
  @ApiProperty({
    required: false,
    type: () => Comment,
  })
  @ValidateNested()
  @Type(() => Comment)
  @IsOptional()
  comment?: Comment | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateCreated!: Date | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  duration!: string | null;

  @ApiProperty({
    required: false,
    type: () => Event,
  })
  @ValidateNested()
  @Type(() => Event)
  @IsOptional()
  event?: Event | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  height!: number | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => Message,
  })
  @ValidateNested()
  @Type(() => Message)
  @IsOptional()
  message?: Message | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  meta!: string | null;

  @ApiProperty({
    required: false,
    enum: EnumMediaMetaType,
  })
  @IsEnum(EnumMediaMetaType)
  @IsOptional()
  @Field(() => EnumMediaMetaType, {
    nullable: true,
  })
  metaType?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => Post,
  })
  @ValidateNested()
  @Type(() => Post)
  @IsOptional()
  post?: Post | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  thumbnail!: string | null;

  @ApiProperty({
    required: false,
    enum: EnumMediaTypeField,
  })
  @IsEnum(EnumMediaTypeField)
  @IsOptional()
  @Field(() => EnumMediaTypeField, {
    nullable: true,
  })
  typeField?: "Option1" | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  url!: string | null;

  @ApiProperty({
    required: false,
    type: () => User,
  })
  @ValidateNested()
  @Type(() => User)
  @IsOptional()
  user?: User | null;

  @ApiProperty({
    required: false,
    type: () => VoteEvent,
  })
  @ValidateNested()
  @Type(() => VoteEvent)
  @IsOptional()
  voteEvent?: VoteEvent | null;

  @ApiProperty({
    required: false,
    type: () => VoteEventCandidate,
  })
  @ValidateNested()
  @Type(() => VoteEventCandidate)
  @IsOptional()
  voteEventCandidate?: VoteEventCandidate | null;

  @ApiProperty({
    required: false,
    type: () => VoteEventCandidate,
  })
  @ValidateNested()
  @Type(() => VoteEventCandidate)
  @IsOptional()
  voteEventCandidateMedia?: VoteEventCandidate | null;

  @ApiProperty({
    required: false,
    type: Number,
  })
  @IsInt()
  @Min(-999999999)
  @Max(999999999)
  @IsOptional()
  @Field(() => Number, {
    nullable: true,
  })
  width!: number | null;
}

export { Media as Media };
