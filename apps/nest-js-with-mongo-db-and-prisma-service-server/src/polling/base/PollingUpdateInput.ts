/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsDate,
  IsOptional,
  IsBoolean,
  IsString,
  MaxLength,
  ValidateNested,
  IsEnum,
} from "class-validator";
import { Type } from "class-transformer";
import { PollOptionUpdateManyWithoutPollingsInput } from "./PollOptionUpdateManyWithoutPollingsInput";
import { PostWhereUniqueInput } from "../../post/base/PostWhereUniqueInput";
import { EnumPollingTypeField } from "./EnumPollingTypeField";

@InputType()
class PollingUpdateInput {
  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateCreated?: Date | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  endDate?: Date | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isActive?: boolean | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  meta?: string | null;

  @ApiProperty({
    required: false,
    type: () => PollOptionUpdateManyWithoutPollingsInput,
  })
  @ValidateNested()
  @Type(() => PollOptionUpdateManyWithoutPollingsInput)
  @IsOptional()
  @Field(() => PollOptionUpdateManyWithoutPollingsInput, {
    nullable: true,
  })
  pollOptions?: PollOptionUpdateManyWithoutPollingsInput;

  @ApiProperty({
    required: false,
    type: () => PostWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PostWhereUniqueInput)
  @IsOptional()
  @Field(() => PostWhereUniqueInput, {
    nullable: true,
  })
  post?: PostWhereUniqueInput | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  startDate?: Date | null;

  @ApiProperty({
    required: false,
    enum: EnumPollingTypeField,
  })
  @IsEnum(EnumPollingTypeField)
  @IsOptional()
  @Field(() => EnumPollingTypeField, {
    nullable: true,
  })
  typeField?: "Option1" | null;
}

export { PollingUpdateInput as PollingUpdateInput };
