/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { ValidateNested, IsOptional, IsDate, IsBoolean } from "class-validator";
import { Type } from "class-transformer";
import { EventWhereUniqueInput } from "../../event/base/EventWhereUniqueInput";
import { UserCreateNestedManyWithoutTicketsInput } from "./UserCreateNestedManyWithoutTicketsInput";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { TicketPackageWhereUniqueInput } from "../../ticketPackage/base/TicketPackageWhereUniqueInput";

@InputType()
class TicketCreateInput {
  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  boughtBy?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateCreated?: Date | null;

  @ApiProperty({
    required: false,
    type: () => EventWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => EventWhereUniqueInput)
  @IsOptional()
  @Field(() => EventWhereUniqueInput, {
    nullable: true,
  })
  event?: EventWhereUniqueInput | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  eventDateTime?: Date | null;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isTicketActive?: boolean | null;

  @ApiProperty({
    required: false,
    type: () => UserCreateNestedManyWithoutTicketsInput,
  })
  @ValidateNested()
  @Type(() => UserCreateNestedManyWithoutTicketsInput)
  @IsOptional()
  @Field(() => UserCreateNestedManyWithoutTicketsInput, {
    nullable: true,
  })
  ticketOwners?: UserCreateNestedManyWithoutTicketsInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  ticketOwnersMeta?: InputJsonValue;

  @ApiProperty({
    required: false,
    type: () => TicketPackageWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TicketPackageWhereUniqueInput)
  @IsOptional()
  @Field(() => TicketPackageWhereUniqueInput, {
    nullable: true,
  })
  ticketType?: TicketPackageWhereUniqueInput | null;
}

export { TicketCreateInput as TicketCreateInput };
