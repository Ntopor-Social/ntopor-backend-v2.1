/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { MediaWhereUniqueInput } from "../../media/base/MediaWhereUniqueInput";
import { ValidateNested, IsOptional } from "class-validator";
import { Type } from "class-transformer";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { MediaListRelationFilter } from "../../media/base/MediaListRelationFilter";
import { VoteEventWhereUniqueInput } from "../../voteEvent/base/VoteEventWhereUniqueInput";
import { VoteWhereUniqueInput } from "../../vote/base/VoteWhereUniqueInput";

@InputType()
class VoteEventCandidateWhereInput {
  @ApiProperty({
    required: false,
    type: () => MediaWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MediaWhereUniqueInput)
  @IsOptional()
  @Field(() => MediaWhereUniqueInput, {
    nullable: true,
  })
  candidacyPhoto?: MediaWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  candidateBio?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  candidateName?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  candidateProfile?: UserWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  candidateUsername?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  dateCreated?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => MediaListRelationFilter,
  })
  @ValidateNested()
  @Type(() => MediaListRelationFilter)
  @IsOptional()
  @Field(() => MediaListRelationFilter, {
    nullable: true,
  })
  media?: MediaListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => VoteEventWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => VoteEventWhereUniqueInput)
  @IsOptional()
  @Field(() => VoteEventWhereUniqueInput, {
    nullable: true,
  })
  voteEvent?: VoteEventWhereUniqueInput;

  @ApiProperty({
    required: false,
    type: () => VoteWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => VoteWhereUniqueInput)
  @IsOptional()
  @Field(() => VoteWhereUniqueInput, {
    nullable: true,
  })
  votes?: VoteWhereUniqueInput;
}

export { VoteEventCandidateWhereInput as VoteEventCandidateWhereInput };
