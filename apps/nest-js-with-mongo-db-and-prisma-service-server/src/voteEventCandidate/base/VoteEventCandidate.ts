/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { Media } from "../../media/base/Media";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
  IsDate,
} from "class-validator";
import { Type } from "class-transformer";
import { User } from "../../user/base/User";
import { VoteEvent } from "../../voteEvent/base/VoteEvent";
import { Vote } from "../../vote/base/Vote";

@ObjectType()
class VoteEventCandidate {
  @ApiProperty({
    required: false,
    type: () => Media,
  })
  @ValidateNested()
  @Type(() => Media)
  @IsOptional()
  candidacyPhoto?: Media | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  candidateBio!: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  candidateName!: string | null;

  @ApiProperty({
    required: false,
    type: () => User,
  })
  @ValidateNested()
  @Type(() => User)
  @IsOptional()
  candidateProfile?: User | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  candidateUsername!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateCreated!: Date | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: () => [Media],
  })
  @ValidateNested()
  @Type(() => Media)
  @IsOptional()
  media?: Array<Media>;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => VoteEvent,
  })
  @ValidateNested()
  @Type(() => VoteEvent)
  @IsOptional()
  voteEvent?: VoteEvent | null;

  @ApiProperty({
    required: false,
    type: () => Vote,
  })
  @ValidateNested()
  @Type(() => Vote)
  @IsOptional()
  votes?: Vote | null;
}

export { VoteEventCandidate as VoteEventCandidate };
