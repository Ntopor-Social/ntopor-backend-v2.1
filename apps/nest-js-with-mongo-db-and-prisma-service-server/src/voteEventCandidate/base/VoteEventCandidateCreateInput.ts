/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { MediaWhereUniqueInput } from "../../media/base/MediaWhereUniqueInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
  IsDate,
} from "class-validator";
import { Type } from "class-transformer";
import { UserWhereUniqueInput } from "../../user/base/UserWhereUniqueInput";
import { MediaCreateNestedManyWithoutVoteEventCandidatesInput } from "./MediaCreateNestedManyWithoutVoteEventCandidatesInput";
import { VoteEventWhereUniqueInput } from "../../voteEvent/base/VoteEventWhereUniqueInput";
import { VoteWhereUniqueInput } from "../../vote/base/VoteWhereUniqueInput";

@InputType()
class VoteEventCandidateCreateInput {
  @ApiProperty({
    required: false,
    type: () => MediaWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => MediaWhereUniqueInput)
  @IsOptional()
  @Field(() => MediaWhereUniqueInput, {
    nullable: true,
  })
  candidacyPhoto?: MediaWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  candidateBio?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  candidateName?: string | null;

  @ApiProperty({
    required: false,
    type: () => UserWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => UserWhereUniqueInput)
  @IsOptional()
  @Field(() => UserWhereUniqueInput, {
    nullable: true,
  })
  candidateProfile?: UserWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  candidateUsername?: string | null;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  dateCreated?: Date | null;

  @ApiProperty({
    required: false,
    type: () => MediaCreateNestedManyWithoutVoteEventCandidatesInput,
  })
  @ValidateNested()
  @Type(() => MediaCreateNestedManyWithoutVoteEventCandidatesInput)
  @IsOptional()
  @Field(() => MediaCreateNestedManyWithoutVoteEventCandidatesInput, {
    nullable: true,
  })
  media?: MediaCreateNestedManyWithoutVoteEventCandidatesInput;

  @ApiProperty({
    required: false,
    type: () => VoteEventWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => VoteEventWhereUniqueInput)
  @IsOptional()
  @Field(() => VoteEventWhereUniqueInput, {
    nullable: true,
  })
  voteEvent?: VoteEventWhereUniqueInput | null;

  @ApiProperty({
    required: false,
    type: () => VoteWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => VoteWhereUniqueInput)
  @IsOptional()
  @Field(() => VoteWhereUniqueInput, {
    nullable: true,
  })
  votes?: VoteWhereUniqueInput | null;
}

export { VoteEventCandidateCreateInput as VoteEventCandidateCreateInput };
