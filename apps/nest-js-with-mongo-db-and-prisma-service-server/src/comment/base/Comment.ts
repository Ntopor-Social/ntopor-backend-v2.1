/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  MaxLength,
  IsOptional,
  IsDate,
  IsEnum,
  IsBoolean,
  ValidateNested,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumCommentHashtags } from "./EnumCommentHashtags";
import { Like } from "../../like/base/Like";
import { Media } from "../../media/base/Media";
import { EnumCommentMetaType } from "./EnumCommentMetaType";
import { Post } from "../../post/base/Post";
import { Report } from "../../report/base/Report";
import { Share } from "../../share/base/Share";
import { User } from "../../user/base/User";

@ObjectType()
class Comment {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  commentContent!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  date!: Date | null;

  @ApiProperty({
    required: false,
    enum: EnumCommentHashtags,
  })
  @IsEnum(EnumCommentHashtags)
  @IsOptional()
  @Field(() => EnumCommentHashtags, {
    nullable: true,
  })
  hashtags?: "Option1" | null;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  isMedia!: boolean | null;

  @ApiProperty({
    required: false,
    type: () => [Like],
  })
  @ValidateNested()
  @Type(() => Like)
  @IsOptional()
  likes?: Array<Like>;

  @ApiProperty({
    required: false,
    type: () => [Media],
  })
  @ValidateNested()
  @Type(() => Media)
  @IsOptional()
  mediaItems?: Array<Media>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  meta!: string | null;

  @ApiProperty({
    required: false,
    enum: EnumCommentMetaType,
  })
  @IsEnum(EnumCommentMetaType)
  @IsOptional()
  @Field(() => EnumCommentMetaType, {
    nullable: true,
  })
  metaType?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: () => Post,
  })
  @ValidateNested()
  @Type(() => Post)
  @IsOptional()
  post?: Post | null;

  @ApiProperty({
    required: false,
    type: () => [Report],
  })
  @ValidateNested()
  @Type(() => Report)
  @IsOptional()
  reports?: Array<Report>;

  @ApiProperty({
    required: false,
    type: () => [Share],
  })
  @ValidateNested()
  @Type(() => Share)
  @IsOptional()
  shares?: Array<Share>;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  tagged!: string | null;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => User,
  })
  @ValidateNested()
  @Type(() => User)
  @IsOptional()
  user?: User | null;
}

export { Comment as Comment };
